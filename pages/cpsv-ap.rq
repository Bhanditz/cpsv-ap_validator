PREFIX adms: <http://www.w3.org/ns/adms#>
PREFIX cv: <http://data.europa.eu/cv/>
PREFIX dcat: <http://www.w3.org/ns/dcat#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX eli: <http://data.europa.eu/eli/ontology#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX locn: <http://www.w3.org/ns/locn#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX org: <http://www.w3.org/ns/org#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX spdx: <http://spdx.org/rdf/terms#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>

SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message (?s AS ?Subject) (?p AS ?Predicate) (?o AS ?Object)
WHERE{
GRAPH <@@@TOKEN-GRAPH@@@> {
# Rule_ID:0
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a locn:Address.
     FILTER(!EXISTS {?s locn:fullAddress ?fulla}).
     BIND (rdf:type AS ?p).
     BIND (locn:Address AS ?o).
     BIND ("Address" AS ?Class_Name).
     BIND (0 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("locn:fullAddress is a required property for Address." AS ?Rule_Description).
     BIND (concat("The address  ",str(?o)," does not have a locn:fullAddress property.") AS ?Message).
   }
  }

UNION
# Rule_ID:1
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a locn:Address.
     ?s locn:fullAddress ?o.
     FILTER(!isLiteral(?o)).
     BIND (locn:fullAddress AS ?p)
     BIND ("Address" AS ?Class_Name).
     BIND (1 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The locn:fullAddress property should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:2
  {SELECT ("Address" AS ?Class_Name) (2 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("locn:fullAddress has maximum cardinality of 1 for Address." AS ?Rule_Description) (concat("The locn:Address ",str(?s)," has more than 1 locn:fullAddress.") AS ?Message) ?s (rdf:type AS ?p) (locn:Address AS ?o)
   WHERE {
     ?s a locn:Address.
     ?s locn:fullAddress ?fulla.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:3
  {SELECT ("Address" AS ?Class_Name) (3 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("locn:addressArea has maximum cardinality of 1 for Address." AS ?Rule_Description) (concat("The locn:Address ",str(?s)," has more than 1 locn:addressArea.") AS ?Message) ?s (rdf:type AS ?p) (locn:Address AS ?o)
   WHERE {
     ?s a locn:Address.
     ?s locn:addressArea ?adda.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:4
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a locn:Address.
     ?s locn:addressArea ?o.
     FILTER(!isLiteral(?o)).
     BIND (locn:addressArea AS ?p).
     BIND ("Address" AS ?Class_Name).
     BIND (4 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The locn:addressArea property should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:5
  {SELECT ("Address" AS ?Class_Name) (5 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("locn:adminUnitL1 has maximum cardinality of 1 for Address." AS ?Rule_Description) (concat("The locn:Address ",str(?s)," has more than 1 locn:adminUnitL1.") AS ?Message) ?s (rdf:type AS ?p) (locn:Address AS ?o)
   WHERE {
     ?s a locn:Address.
     ?s locn:adminUnitL1 ?unitL1.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:6
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a locn:Address.
     ?s locn:adminUnitL1 ?o.
     FILTER(!isLiteral(?o)).
     BIND (locn:adminUnitL1 AS ?p).
     BIND ("Address" AS ?Class_Name).
     BIND (6 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("locn:adminUnitL1 should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }
 
UNION
# Rule_ID:7
  {SELECT ("Address" AS ?Class_Name) (7 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("locn:adminUnitL2 has maximum cardinality of 1 for Address." AS ?Rule_Description) (concat("The locn:Address ",str(?s)," has more than 1 locn:adminUnitL2.") AS ?Message) ?s (rdf:type AS ?p) (locn:Address AS ?o)
   WHERE {
     ?s a locn:Address.
     ?s locn:adminUnitL2 ?unitL2.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:8
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a locn:Address.
     ?s locn:adminUnitL2 ?o.
     FILTER(!isLiteral(?o)).
     BIND (locn:adminUnitL2 AS ?p).
     BIND ("Address" AS ?Class_Name).
     BIND (8 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("locn:adminUnitL2 should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }
 
UNION
# Rule_ID:9
  {SELECT ("Address" AS ?Class_Name) (9 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("locn:locatorDesignator has maximum cardinality of 1 for Address." AS ?Rule_Description) (concat("The locn:Address ",str(?s)," has more than 1 locn:locatorDesignator.") AS ?Message) ?s (rdf:type AS ?p) (locn:Address AS ?o)
   WHERE {
     ?s a locn:Address.
     ?s locn:locatorDesignator ?locad.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:10
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a locn:Address.
     ?s locn:locatorDesignator ?o.
     FILTER(!isLiteral(?o)).
     BIND (locn:locatorDesignator AS ?p).
     BIND ("Address" AS ?Class_Name).
     BIND (10 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("locn:locatorDesignator should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:11
  {SELECT ("Address" AS ?Class_Name) (11 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("locn:locatorName has maximum cardinality of 1 for Address." AS ?Rule_Description) (concat("The locn:Address ",str(?s)," has more than 1 locn:locatorName.") AS ?Message) ?s (rdf:type AS ?p) (locn:Address AS ?o)
   WHERE {
     ?s a locn:Address.
     ?s locn:locatorName ?locan.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:12
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a locn:Address.
     ?s locn:locatorName ?o.
     FILTER(!isLiteral(?o)).
     BIND (locn:locatorName AS ?p).
     BIND ("Address" AS ?Class_Name).
     BIND (12 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("locn:locatorName should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:13
  {SELECT ("Address" AS ?Class_Name) (13 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("locn:poBox has maximum cardinality of 1 for Address." AS ?Rule_Description) (concat("The locn:Address ",str(?s)," has more than 1 locn:poBox.") AS ?Message) ?s (rdf:type AS ?p) (locn:Address AS ?o)
   WHERE {
     ?s a locn:Address.
     ?s locn:poBox ?pobox.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:14
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a locn:Address.
     ?s locn:poBox ?o.
     FILTER(!isLiteral(?o)).
     BIND (locn:poBox AS ?p).
     BIND ("Address" AS ?Class_Name).
     BIND (14 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("locn:poBox should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:15
  {SELECT ("Address" AS ?Class_Name) (15 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("locn:postCode has maximum cardinality of 1 for Address." AS ?Rule_Description) (concat("The locn:Address ",str(?s)," has more than 1 locn:postCode.") AS ?Message) ?s (rdf:type AS ?p) (locn:Address AS ?o)
   WHERE {
     ?s a locn:Address.
     ?s locn:postCode ?postc.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:16
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a locn:Address.
     ?s locn:postCode ?o.
     FILTER(!isLiteral(?o)).
     BIND (locn:postCode AS ?p).
     BIND ("Address" AS ?Class_Name).
     BIND (16 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("locn:postCode should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:17
  {SELECT ("Address" AS ?Class_Name) (17 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("locn:postName has maximum cardinality of 1 for Address." AS ?Rule_Description) (concat("The locn:Address ",str(?s)," has more than 1 locn:postName.") AS ?Message) ?s (rdf:type AS ?p) (locn:Address AS ?o)
   WHERE {
     ?s a locn:Address.
     ?s locn:postName ?postn.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:18
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a locn:Address.
     ?s locn:postName ?o.
     FILTER(!isLiteral(?o)).
     BIND (locn:postName AS ?p).
     BIND ("Address" AS ?Class_Name).
     BIND (18 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("locn:postName should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:19
  {SELECT ("Address" AS ?Class_Name) (19 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("locn:thoroughfare has maximum cardinality of 1 for Address." AS ?Rule_Description) (concat("The locn:Address ",str(?s)," has more than 1 locn:thoroughfare.") AS ?Message) ?s (rdf:type AS ?p) (locn:Address AS ?o)
   WHERE {
     ?s a locn:Address.
     ?s locn:thoroughfare ?fare.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:20
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a locn:Address.
     ?s locn:thoroughfare ?o.
     FILTER(!isLiteral(?o)).
     BIND (locn:thoroughfare AS ?p).
     BIND ("Address" AS ?Class_Name).
     BIND (20 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("locn:thoroughfare should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:21
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a foaf:Agent.
     FILTER(!EXISTS {?s dct:title ?name}).
     BIND (rdf:type AS ?p).
     BIND (foaf:Agent AS ?o).
     BIND ("Agent" AS ?Class_Name).
     BIND (21 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:title is a required property for Agent." AS ?Rule_Description).
     BIND (concat("The agent  ",str(?o)," does not have a dct:title property.") AS ?Message).
   }
  }

UNION
# Rule_ID:22
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a foaf:Agent.
     ?s dct:title ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:title AS ?p).
     BIND ("Agent" AS ?Class_Name).
     BIND (22 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The dct:title property should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }  
  
UNION
# Rule_ID:23
  {SELECT ("Agent" AS ?Class_Name) (23 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:title has maximum cardinality of 1 for Agent." AS ?Rule_Description) (concat("The foaf:Agent ",str(?s)," has more than 1 dct:title.") AS ?Message) ?s (rdf:type AS ?p) (foaf:Agent AS ?o)
   WHERE {
     ?s a foaf:Agent.
     ?s dct:title ?name.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }
  
UNION
# Rule_ID:24
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a foaf:Agent.
     ?s dct:type ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND ("Agent" AS ?Class_Name).
     BIND (24 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:type should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("foaf:Agent ",str(?s)," does not have a dct:type property of type skos:Concept.") AS ?Message).
   }
  }

UNION
# Rule_ID:25
  {SELECT ("Agent" AS ?Class_Name) (25 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:type has maximum cardinality of 1 for Agent." AS ?Rule_Description) (concat("The foaf:Agent ",str(?s)," has more than 1 dct:type.") AS ?Message) ?s (rdf:type AS ?p) (foaf:Agent AS ?o)
   WHERE {
     ?s a foaf:Agent.
     ?s dct:type ?type.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }
  
UNION
# Rule_ID:26
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a foaf:Agent.
     ?s cv:hasRole ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND ("Agent" AS ?Class_Name).
     BIND (26 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("cv:hasRole should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("foaf:Agent ",str(?s)," does not have a cv:hasRole property of type skos:Concept.") AS ?Message).
   }
  }

UNION
# Rule_ID:27
  {SELECT ("Agent" AS ?Class_Name) (27 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("cv:hasRole has maximum cardinality of 1 for Agent." AS ?Rule_Description) (concat("The foaf:Agent ",str(?s)," has more than 1 cv:hasRole.") AS ?Message) ?s (rdf:type AS ?p) (foaf:Agent AS ?o)
   WHERE {
     ?s a foaf:Agent.
     ?s cv:hasRole ?role.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  } 

UNION
# Rule_ID:28
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a foaf:Agent.
     ?s cv:uses ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND ("Agent" AS ?Class_Name).
     BIND (28 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("cv:uses should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("foaf:Agent ",str(?s)," does not have a cv:uses property of type skos:Concept.") AS ?Message).
   }
  }

UNION
# Rule_ID:29
  {SELECT ("Agent" AS ?Class_Name) (29 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("cv:uses has maximum cardinality of 1 for Agent." AS ?Rule_Description) (concat("The foaf:Agent ",str(?s)," has more than 1 cv:uses.") AS ?Message) ?s (rdf:type AS ?p) (foaf:Agent AS ?o)
   WHERE {
     ?s a foaf:Agent.
     ?s cv:uses ?uses.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:30
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a foaf:Agent.
     ?s locn:address ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a locn:Address}).
     BIND ("Agent" AS ?Class_Name).
     BIND (30 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("locn:address should be a locn:Address." AS ?Rule_Description).
     BIND (concat("foaf:Agent ",str(?s)," does not have a locn:address property of type locn:Address.") AS ?Message).
   }
  }

UNION
# Rule_ID:31
  {SELECT ("Agent" AS ?Class_Name) (31 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("locn:address has maximum cardinality of 1 for Agent." AS ?Rule_Description) (concat("The foaf:Agent ",str(?s)," has more than 1 locn:address.") AS ?Message) ?s (locn:address AS ?p) (cv:Agent AS ?o)
   WHERE {
     ?s a foaf:Agent.
     ?s locn:address ?address.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }  

UNION
# Rule_ID:32
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:BusinessEvent.
     FILTER(!EXISTS {?s dct:title ?name}).
     BIND (rdf:type AS ?p).
     BIND (cv:BusinessEvent AS ?o).
     BIND ("BusinessEvent" AS ?Class_Name).
     BIND (32 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:title is a required property for BusinessEvent." AS ?Rule_Description).
     BIND (concat("The cv:BusinessEvent ",str(?o)," does not have a dct:title property.") AS ?Message).
   }
  }

UNION
# Rule_ID:33
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:BusinessEvent.
     ?s dct:title ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:title AS ?p).
     BIND ("BusinessEvent" AS ?Class_Name).
     BIND (33 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The dct:title property should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }  
  
UNION
# Rule_ID:34
  {SELECT ("BusinessEvent" AS ?Class_Name) (34 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:title has maximum cardinality of 1 for BusinessEvent." AS ?Rule_Description) (concat("The cv:BusinessEvent ",str(?s)," has more than 1 dct:title.") AS ?Message) ?s (rdf:type AS ?p) (cv:BusinessEvent AS ?o)
   WHERE {
     ?s a cv:BusinessEvent.
     ?s dct:title ?name.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:35
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:BusinessEvent.
     ?s dct:description ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:description AS ?p).
     BIND ("BusinessEvent" AS ?Class_Name).
     BIND (35 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The dct:description property should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }  
  
UNION
# Rule_ID:36
  {SELECT ("BusinessEvent" AS ?Class_Name) (36 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:description has maximum cardinality of 1 for BusinessEvent." AS ?Rule_Description) (concat("The cv:BusinessEvent ",str(?s)," has more than 1 dct:description.") AS ?Message) ?s (rdf:type AS ?p) (cv:BusinessEvent AS ?o)
   WHERE {
     ?s a cv:BusinessEvent.
     ?s dct:description ?desc.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }  

UNION
# Rule_ID:37
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:BusinessEvent.
     ?s dct:language ?o.
     ?o ?pred ?lan.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND (dct:language AS ?p).
     BIND ("BusinessEvent" AS ?Class_Name).
     BIND (37 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:language should be a dct:LinguisticSystem." AS ?Rule_Description).
     BIND (concat("cv:BusinessEvent ",str(?s)," does not have a dct:language property of type dct:LinguisticSystem.") AS ?Message).
   }
  }  
  
UNION
# Rule_ID:38
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:BusinessEvent.
     ?s dct:type ?o.
     ?o ?pred ?type.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND (dct:type AS ?p).
     BIND ("BusinessEvent" AS ?Class_Name).
     BIND (38 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:type should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("cv:BusinessEvent ",str(?s)," does not have a dct:type property of type skos:Concept.") AS ?Message).
   }
  }

UNION
# Rule_ID:39
  {SELECT ("BusinessEvent" AS ?Class_Name) (39 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:type has maximum cardinality of 1 for BusinessEvent." AS ?Rule_Description) (concat("The cv:BusinessEvent ",str(?s)," has more than 1 dct:type.") AS ?Message) ?s (rdf:type AS ?p) (cv:BusinessEvent AS ?o)
   WHERE {
     ?s a cv:BusinessEvent.
     ?s dct:type ?type.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  } 

UNION
# Rule_ID:40
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:BusinessEvent.
     ?s cv:hasCost ?o.
     ?o ?pred ?cost.
     FILTER(!EXISTS {?o a cv:Cost}).
     BIND (cv:hasCost AS ?p).
     BIND ("BusinessEvent" AS ?Class_Name).
     BIND (40 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The cv:hasCost property should be a cv:Cost." AS ?Rule_Description).
     BIND (concat("cv:BusinessEvent ",str(?s)," does not have a cv:hasCost property of type cv:Cost.") AS ?Message).
   }
  }

UNION
# Rule_ID:41
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:BusinessEvent.
     ?s cv:processingTime ?o.
     FILTER(!isLiteral(?o)).
     BIND (cv:processingTime AS ?p).
     BIND ("BusinessEvent" AS ?Class_Name).
     BIND (41 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The cv:processingTime property should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:42
  {SELECT ("BusinessEvent" AS ?Class_Name) (42 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("cv:processingTime has maximum cardinality of 1 for cv:BusinessEvent." AS ?Rule_Description) (concat("The cv:BusinessEvent ",str(?s)," has more than 1 cv:processingTime.") AS ?Message) ?s (rdf:type AS ?p) (cv:BusinessEvent AS ?o)
   WHERE {
     ?s a cv:BusinessEvent.
     ?s cv:processingTime ?proctime.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:43
  {SELECT ("Channel" AS ?Class_Name) (43 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:type has maximum cardinality of 1 for cv:Channel." AS ?Rule_Description) (concat("The cv:Channel ",str(?s)," has more than 1 dct:type.") AS ?Message) ?s (dct:type AS ?p) (sample(?type) AS ?o)
   WHERE {
     ?s a cv:Channel.
     ?s dct:type ?type.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:44
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:Channel.
     ?s cv:ownedBy ?o.
     ?o ?pred ?own.
     FILTER(!EXISTS {?o a org:FormalOrganization}).
     BIND (cv:ownedBy AS ?p).
     BIND ("Channel" AS ?Class_Name).
     BIND (44 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The cv:ownedBy property should be a org:FormalOrganization." AS ?Rule_Description).
     BIND (concat("cv:Channel ",str(?s)," does not have a cv:ownedBy property of type org:FormalOrganization.") AS ?Message).
   }
  }

UNION
# Rule_ID:45
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
	 ?s a cv:Cost.
     ?s dct:description ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:description AS ?p).
     BIND ("Cost" AS ?Class_Name).
     BIND (45 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The dct:description property should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }  
  
UNION
# Rule_ID:46
  {SELECT ("Cost" AS ?Class_Name) (46 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:description has maximum cardinality of 1 for Cost." AS ?Rule_Description) (concat("The cv:Cost ",str(?s)," has more than 1 dct:description.") AS ?Message) ?s (rdf:type AS ?p) (cv:Cost AS ?o)
   WHERE {
     ?s a cv:Cost.
     ?s dct:description ?desc.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }  

UNION
# Rule_ID:47
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:Cost.
     ?s cv:isDefinedBy ?o.
     ?o ?pred ?fo.
     FILTER(!EXISTS {?o a org:FormalOrganization}).
     BIND (cv:isDefinedBy AS ?p).
     BIND ("Cost" AS ?Class_Name).
     BIND (47 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The cv:isDefinedBy property should be a org:FormalOrganization." AS ?Rule_Description).
     BIND (concat("cv:Cost ",str(?s)," does not have a cv:isDefinedBy property of type org:FormalOrganization.") AS ?Message).
   }
  }

UNION
# Rule_ID:48
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:Cost.
     ?s cv:monetary_value ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a xsd:decimal}).
     BIND (cv:monetary_value AS ?p).
     BIND ("Cost" AS ?Class_Name).
     BIND (48 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("cv:monetary_value should be a xsd:decimal." AS ?Rule_Description).
     BIND (concat("cv:Cost ",str(?s)," does not have a cv:monetary_value property of type xsd:decimal.") AS ?Message).
   }
  }

UNION
# Rule_ID:49
  {SELECT ("Cost" AS ?Class_Name) (49 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("cv:monetary_value has maximum cardinality of 1 for cv:Cost." AS ?Rule_Description) (concat("The cv:Cost ",str(?s)," has more than 1 cv:monetary_value.") AS ?Message) ?s (rdf:type AS ?p) (cv:Cost AS ?o)
   WHERE {
     ?s a cv:Cost.
     ?s cv:monetary_value ?val.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:50
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:Cost.
     ?s cv:currency ?o.
     ?o ?pred ?cur.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND (cv:currency AS ?p).
     BIND ("Cost" AS ?Class_Name).
     BIND (50 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("cv:currency should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("cv:Cost ",str(?s)," does not have a cv:currency property of type skos_Concept.") AS ?Message).
   }
  }

UNION
# Rule_ID:51
  {SELECT ("Cost" AS ?Class_Name) (51 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("cv:currency has maximum cardinality of 1 for cv:Cost." AS ?Rule_Description) (concat("The cv:Cost ",str(?s)," has more than 1 cv:currency.") AS ?Message) ?s (rdf:type AS ?p) (cv:Cost AS ?o)
   WHERE {
     ?s a cv:Cost.
     ?s cv:currency ?cur.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:52
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:FormalFramework.
     FILTER(!EXISTS {?s eli:id_local ?name}).
     BIND (eli:id_local AS ?p).
     BIND (cv:FormalFramework AS ?o).
     BIND ("FormalFramework" AS ?Class_Name).
     BIND (52 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("eli:id_local is a required property for FormalFramework." AS ?Rule_Description).
     BIND (concat("The cv:FormalFramework ",str(?o)," does not have a eli:id_local property.") AS ?Message).
   }
  }

UNION
# Rule_ID:53
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:FormalFramework.
     ?s eli:id_local ?o.
     FILTER(!isLiteral(?o)).
     BIND (eli:id_local AS ?p).
     BIND ("FormalFramework" AS ?Class_Name).
     BIND (53 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The eli:id_local property should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }  
  
UNION
# Rule_ID:54
  {SELECT ("FormalFramework" AS ?Class_Name) (54 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("eli:id_local has maximum cardinality of 1 for FormalFramework." AS ?Rule_Description) (concat("The cv:FormalFramework ",str(?s)," has more than 1 eli:id_local.") AS ?Message) ?s (eli:id_local AS ?p) (cv:FormalFramework AS ?o)
   WHERE {
     ?s a cv:FormalFramework.
     ?s eli:id_local ?name.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:55
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:FormalFramework.
     ?s dct:description ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:description AS ?p).
     BIND ("FormalFramework" AS ?Class_Name).
     BIND (55 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The dct:description property should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:56
  {SELECT ("FormalFramework" AS ?Class_Name) (56 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:description has maximum cardinality of 1 for FormalFramework." AS ?Rule_Description) (concat("The cv:FormalFramework ",str(?s)," has more than 1 dct:description.") AS ?Message) ?s (dct:description AS ?p) (cv:FormalFramework AS ?o)
   WHERE {
     ?s a cv:FormalFramework.
     ?s dct:description ?desc.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:57
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:FormalFramework.
     ?s eli:language ?o.
     ?o ?pred ?lan.
     FILTER(!EXISTS {?o a eli:Language}).
     BIND (eli:language AS ?p).
     BIND ("FormalFramework" AS ?Class_Name).
     BIND (57 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("eli:language should be a eli:Language." AS ?Rule_Description).
     BIND (concat("cv:FormalFramework ",str(?s)," does not have a eli:language property of type eli:Language.") AS ?Message).
   }
  }

UNION
# Rule_ID:58
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:FormalFramework.
     ?s adms:adms-status ?o.
     FILTER(!isLiteral(?o)).
     BIND (adms:adms-status AS ?p).
     BIND ("FormalFramework" AS ?Class_Name).
     BIND (58 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The adms:adms-status property should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:59
  {SELECT ("FormalFramework" AS ?Class_Name) (59 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("adms:adms-status has maximum cardinality of 1 for FormalFramework." AS ?Rule_Description) (concat("The cv:FormalFramework ",str(?s)," has more than 1 adms:adms-status.") AS ?Message) ?s (adms:adms-status AS ?p) (cv:FormalFramework AS ?o)
   WHERE {
     ?s a cv:FormalFramework.
     ?s adms:adms-status ?sta.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:60
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:FormalFramework.
     ?s eli:is_about ?o.
     ?o ?pred ?sub.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND (eli:is_about AS ?p).
     BIND ("FormalFramework" AS ?Class_Name).
     BIND (60 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("eli:is_about should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("cv:FormalFramework ",str(?s)," does not have a eli:is_about property of type skos:Concept.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:61
  {SELECT ("FormalFramework" AS ?Class_Name) (61 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("eli:is_about has maximum cardinality of 1 for FormalFramework." AS ?Rule_Description) (concat("The cv:FormalFramework ",str(?s)," has more than 1 eli:is_about.") AS ?Message) ?s (eli:is_about AS ?p) (cv:FormalFramework AS ?o)
   WHERE {
     ?s a cv:FormalFramework.
     ?s eli:is_about ?sub.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:62
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:FormalFramework.
     ?s eli:relevant_for ?o.
     ?o ?pred ?terr.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND (eli:relevant_for AS ?p).
     BIND ("FormalFramework" AS ?Class_Name).
     BIND (62 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("eli:relevant_for should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("cv:FormalFramework ",str(?s)," does not have a eli:relevant_for property of type skos:Concept.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:63
  {SELECT ("FormalFramework" AS ?Class_Name) (63 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("eli:relevant_for has maximum cardinality of 1 for FormalFramework." AS ?Rule_Description) (concat("The cv:FormalFramework ",str(?s)," has more than 1 eli:relevant_for.") AS ?Message) ?s (eli:relevant_for AS ?p) (cv:FormalFramework AS ?o)
   WHERE {
     ?s a cv:FormalFramework.
     ?s eli:relevant_for ?terr.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:62
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:FormalFramework.
     ?s eli:relevant_for ?o.
     ?o ?pred ?terr.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND (eli:relevant_for AS ?p).
     BIND ("FormalFramework" AS ?Class_Name).
     BIND (62 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("eli:relevant_for should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("cv:FormalFramework ",str(?s)," does not have a eli:relevant_for property of type skos:Concept.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:63
  {SELECT ("FormalFramework" AS ?Class_Name) (63 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("eli:relevant_for has maximum cardinality of 1 for FormalFramework." AS ?Rule_Description) (concat("The cv:FormalFramework ",str(?s)," has more than 1 eli:relevant_for.") AS ?Message) ?s (eli:relevant_for AS ?p) (cv:FormalFramework AS ?o)
   WHERE {
     ?s a cv:FormalFramework.
     ?s eli:relevant_for ?terr.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:64
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:FormalFramework.
     ?s eli:type_document ?o.
     ?o ?pred ?tdoc.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND (eli:type_document AS ?p).
     BIND ("FormalFramework" AS ?Class_Name).
     BIND (64 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("eli:type_document should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("cv:FormalFramework ",str(?s)," does not have a eli:type_document property of type skos:Concept.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:65
  {SELECT ("FormalFramework" AS ?Class_Name) (65 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("eli:type_document has maximum cardinality of 1 for FormalFramework." AS ?Rule_Description) (concat("The cv:FormalFramework ",str(?s)," has more than 1 eli:type_document.") AS ?Message) ?s (eli:type_document AS ?p) (cv:FormalFramework AS ?o)
   WHERE {
     ?s a cv:FormalFramework.
     ?s eli:type_document ?tdoc.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:66
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:FormalFramework.
     ?s dct:creator ?o.
     ?o ?pred ?crea.
     FILTER(!EXISTS {?o a org:FormalOrganization}).
     BIND (dct:creator AS ?p).
     BIND ("FormalFramework" AS ?Class_Name).
     BIND (66 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:creator should be a org:FormalOrganization." AS ?Rule_Description).
     BIND (concat("cv:FormalFramework ",str(?s)," does not have a dct:creator property of type org:FormalOrganization.") AS ?Message).
   }
  }

UNION
# Rule_ID:67
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a cv:FormalFramework.
     ?s dct:relation ?o.
     ?o ?pred ?rela.
     FILTER(!EXISTS {?o a org:FormalOrganization}).
     BIND (dct:relation AS ?p).
     BIND ("FormalFramework" AS ?Class_Name).
     BIND (67 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:relation should be a cv:FormalFramework." AS ?Rule_Description).
     BIND (concat("cv:FormalFramework ",str(?s)," does not have a dct:relation property of type cv:FormalFramework.") AS ?Message).
   }
  }

UNION
# Rule_ID:68
  {SELECT ("FormalFramework" AS ?Class_Name) (68 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:relation has maximum cardinality of 1 for FormalFramework." AS ?Rule_Description) (concat("The cv:FormalFramework ",str(?s)," has more than 1 dct:relation.") AS ?Message) ?s (dct:relation AS ?p) (sample(?rela) AS ?o)
   WHERE {
     ?s a cv:FormalFramework.
     ?s dct:relation ?rela.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

  
UNION
# Rule_ID:112
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     FILTER(!EXISTS {?s a cv:BusinessEvent}).
     BIND ("BusinessEvent" AS ?Class_Name).
     BIND (112 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("cv:BusinessEvent does not exist." AS ?Rule_Description).
     BIND (concat("The mandatory class cv:BusinessEvent does not exist.") AS ?Message).
   }
  }
  
}
}